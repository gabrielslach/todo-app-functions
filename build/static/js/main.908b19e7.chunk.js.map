{"version":3,"sources":["components/IconBtn.js","components/Task.js","components/GroupPaper.js","components/Dialog.js","components/TaskCreatorDialog.js","components/TaskDeleteDialog.js","components/TaskChangeGroupDialog.js","util/utilityFunctions.js","util/useTasks.js","App.js","reportWebVitals.js","index.js"],"names":["IconBtn","props","fill","size","onClick","xmlns","className","viewBox","stroke","children","WriteIcon","strokeLinecap","strokeLinejoin","strokeWidth","d","DeleteIcon","MoveIcon","fillRule","clipRule","AddIcon","Task","categories","color","label","id","taskgroup","title","description","status","handleEditTask","handleDeleteTask","handleTaskChangeGroup","categories_","map","item","join","colorVariant","level","GroupPaper","taskList","onAddTask","onEditTask","onDeleteTask","onTaskChangeGroup","groupName","MyDialog","isOpen","handleClose","handleConfirm","handleCancel","disabled","open","onClose","Overlay","Title","Description","TextInput","name","register","required","validation","Fragment","type","TextArea","Select","optionsList","value","formValues","taskGroupList","TaskCreatorDialog","onSubmit","isLoading","selected","useForm","defaultValues","handleSubmit","reset","errors","formState","useEffect","Dialog","data","minLength","message","Object","entries","key","val","length","taskTitle","TaskChangeGroupDialog","WEB_SERVER_API_URL","window","location","protocol","hostname","origin","createColors","colors","colorVariants","push","mapData","setQueueTasks","setDoingTasks","setDoneTasks","setTasks","tasks","list","queueTasks_","doingTasks_","doneTasks_","categoriesList","forEach","indexOf","task","taskCategories","task_","catListId","filterFx","field","filterTxt","arr","filter","JSON","stringify","toLowerCase","useTasks","vars","timeOutVar","useRef","useMemo","useState","queueTasks","doingTasks","doneTasks","setIsLoading","startTimeout","current","setTimeout","alert","stopTimeout","clearTimeout","onRequestFail","req","console","log","makePostRequest","api","dataparam","loginToken","onSuccess","action","dataParameters","axios","method","url","timeout","headers","Authorization","postRequest","then","res","resData","oFlag","oMessage","onRequestSuccess","catch","err","response","callback","filterField","dialogState","taskCreator","taskEditor","taskDelete","dialogType","formFields","App","setIsOpen","setSelected","handleToggleIsOpen","isOpen_","fields","isNaN","handleCreateTask","formData","resetFormCallback","e","preventDefault","target","onChange","placeholder","style","textAlignLast","toUpperCase","taskChangeGroup","TaskDeleteDialog","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.908b19e7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction IconBtn(props) {\r\n    const {fill='none', size='5', onClick=null} = props;\r\n    return(\r\n        <svg onClick={onClick} xmlns=\"http://www.w3.org/2000/svg\" className={`h-${size} w-${size} text-statusGray hover:text-blue-500 cursor-pointer`} fill={fill} viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n            {props.children}\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport function WriteIcon(props) {\r\n    const {onClick} = props;\r\n    return(\r\n        <IconBtn onClick={onClick}>\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\" />\r\n        </IconBtn>\r\n    )\r\n}\r\n\r\nexport function DeleteIcon(props) {\r\n    const {onClick} = props;\r\n    return(\r\n        <IconBtn onClick={onClick}>\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\" />\r\n        </IconBtn>\r\n    )\r\n}\r\n\r\nexport function MoveIcon(props) {\r\n    const {onClick} = props;\r\n    return(\r\n        <IconBtn fill='currentColor'  onClick={onClick}>\r\n            <path fillRule=\"evenodd\" d=\"M10 3a1 1 0 01.707.293l3 3a1 1 0 01-1.414 1.414L10 5.414 7.707 7.707a1 1 0 01-1.414-1.414l3-3A1 1 0 0110 3zm-3.707 9.293a1 1 0 011.414 0L10 14.586l2.293-2.293a1 1 0 011.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z\" clipRule=\"evenodd\" />\r\n        </IconBtn>\r\n    )\r\n}\r\n\r\nexport function AddIcon(props) {\r\n    const {onClick} = props;\r\n    return(\r\n        <IconBtn size='8'  onClick={onClick}>\r\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v3m0 0v3m0-3h3m-3 0H9m12 0a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n        </IconBtn>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport {WriteIcon, DeleteIcon, MoveIcon} from './IconBtn';\r\n\r\nfunction Task(props) {\r\n    const {\r\n        categories=[{color: 'green', label:'sample'}], \r\n        id='', taskgroup='', \r\n        title='Title', \r\n        description='Description', \r\n        status='Status', \r\n        handleEditTask=()=>{}, \r\n        handleDeleteTask = () => {}, \r\n        handleTaskChangeGroup = () => {}\r\n    } = props;\r\n\r\n    const onEditTask = () => {\r\n        const categories_ = categories.map((item)=> {\r\n            return (item.label);\r\n            }).join(', ');\r\n        const task_fields = {id, title, description, status, taskgroup, categories: categories_}\r\n        handleEditTask(task_fields);\r\n    };\r\n\r\n    const onMoveTask = () => {\r\n        const categories_ = categories.map((item)=> {\r\n            return (item.label);\r\n            }).join(', ');\r\n        const task_fields = {id, title, description, status, taskgroup, categories: categories_}\r\n        handleTaskChangeGroup(task_fields);\r\n    };\r\n\r\n    const onDeleteTask = () => {\r\n        handleDeleteTask({id, title});\r\n    };\r\n\r\n    return(\r\n        <div className='rounded-lg p-3 mb-3 min-w-full bg-white'>\r\n            <div className='flex flex-row flex-auto'>\r\n            <h6 className='flex-1 mb-1 font-normal'>{title}</h6>\r\n            {/* Drag Icon */}\r\n            <MoveIcon onClick={onMoveTask} />\r\n            </div>\r\n            <p className='font-light text-sm'>{description}</p>\r\n            {/* Categories */}\r\n            <div className='flex flex-row flex-wrap mt-2 mb-1'>\r\n                {categories.map(item=> (\r\n                    <div className={`flex-initial bg-${item.colorVariant.color}-${item.colorVariant.level} px-1 mb-1 mr-2`} key={`${item.label}-cat`}>\r\n                        <p className={`text-${item.colorVariant.color}-${item.colorVariant.level > 500 ? '50' : '700'} font-bold text-sm`}>{item.label}</p>\r\n                    </div>\r\n                ))\r\n                }\r\n            </div>\r\n            <hr/>\r\n            <div className='flex flex-row pt-2 items-center gap-2'>\r\n                <p className='flex-grow text-statusGray text-xs'>{status}</p>\r\n                {/* Actions */}\r\n                <WriteIcon onClick={onEditTask} />\r\n                <DeleteIcon onClick={onDeleteTask} />\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Task;","import React from 'react';\r\nimport { AddIcon } from './IconBtn';\r\n\r\nimport Task from './Task';\r\n\r\nfunction GroupPaper(props) {\r\n    const {taskList = [], onAddTask = () => {}, onEditTask = () => {}, onDeleteTask = () => {}, onTaskChangeGroup=()=>{}, groupName=''} = props;\r\n    return(\r\n        <div className='flex flex-col w-full sm:w-96' id='root' key={`${groupName}-groupPaper`}>\r\n            <h6 className='text-statusGray text-sm mb-2 uppercase'>{groupName}</h6>\r\n            <div className='p-4 bg-groupGray rounded-lg flex flex-col items-center'>\r\n                {\r\n                    taskList.map(item => (\r\n                        <Task \r\n                          key={`${item.id}-task`}\r\n                          id={item.id}\r\n                          taskgroup={groupName}\r\n                          title={item.title}\r\n                          description={item.description}\r\n                          status={item.status}\r\n                          categories={item.categories}\r\n                          handleEditTask={onEditTask}\r\n                          handleDeleteTask={onDeleteTask}\r\n                          handleTaskChangeGroup={onTaskChangeGroup}\r\n                         />\r\n                    ))\r\n                }\r\n                <AddIcon onClick={()=>onAddTask({groupName})} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default GroupPaper;","import React from \"react\";\r\nimport { Dialog } from \"@headlessui/react\";\r\n\r\nfunction MyDialog(props) {\r\n  const {\r\n    isOpen = false, \r\n    handleClose = ()=>{}, \r\n    handleConfirm = ()=>{}, \r\n    handleCancel = ()=>{},\r\n    title = '',\r\n    description = '',\r\n    children = null,\r\n    disabled = false\r\n   } = props;\r\n   \r\n  return (\r\n    <Dialog open={isOpen} onClose={handleClose} className=\"fixed z-10 inset-0 overflow-y-auto flex items-center justify-center\">\r\n      <Dialog.Overlay className=\"fixed inset-0 bg-black opacity-30\" />\r\n      <div className=\"w-full max-w-md p-6 overflow-hiddenalign-middle transform bg-white shadow-xl rounded-2xl\">\r\n        <Dialog.Title className=\"text-btnHovBlue text-2xl font-normal\">{title}</Dialog.Title>\r\n        <Dialog.Description className=\"text-sm mx-1 my-2\">\r\n            {description}\r\n        </Dialog.Description>\r\n\r\n        {children}\r\n\r\n        <div className='mt-6 float-right flex gap-1'>\r\n          <button \r\n            onClick={handleCancel} \r\n            className={`px-3 ${disabled && 'cursor-not-allowed'}`} \r\n            disabled={disabled} \r\n            >\r\n              Cancel\r\n            </button>\r\n          <button \r\n            onClick={handleConfirm} \r\n            className= {`py-1 px-3 rounded-md text-white \r\n              ${!disabled && 'bg-blue-600 font-normal'} \r\n              ${disabled && 'bg-gray-400 cursor-not-allowed'}\r\n              `} \r\n            disabled={disabled} \r\n            >\r\n              {disabled ? 'Loading...': 'Confirm'}\r\n            </button>\r\n        </div>\r\n      </div>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default MyDialog;","import React, {useEffect} from 'react';\r\nimport {useForm} from 'react-hook-form';\r\n\r\nimport Dialog from './Dialog';\r\n\r\nconst TextInput = (props) => {\r\n    const { name, label, register, required, validation=null } = props;\r\n    return(\r\n        <React.Fragment>\r\n        <label className=\"block\">\r\n        <span className=\"text-gray-700\">{label}{required && '*'}</span>\r\n        <input type='text' {...register(name, { required, ...validation })} className='mt-1 block w-full rounded-md bg-gray-100 border-transparent focus:border-gray-500 focus:bg-white focus:ring-0' />\r\n        </label>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst TextArea = (props) => {\r\n    const { name, label, register, required } = props;\r\n    return(\r\n        <React.Fragment>\r\n        <label className=\"block\">\r\n        <span className=\"text-gray-700\">{label}{required && '*'}</span>\r\n        <textarea {...register(name, { required })} className='mt-1 block w-full rounded-md bg-gray-100 border-transparent focus:border-gray-500 focus:bg-white focus:ring-0' />\r\n        </label>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nconst Select = (props) => {\r\n    const { name, label, optionsList = [], register, required } = props;\r\n    return(\r\n        <React.Fragment>\r\n        <label className=\"block\">\r\n        <span className=\"text-gray-700\">{label}{required && '*'}</span>\r\n        <select {...register(name, { required })} className='mt-1 block w-full rounded-md bg-gray-100 border-transparent focus:border-gray-500 focus:bg-white focus:ring-0' >\r\n            {optionsList.map(item => {\r\n                const {value, label} = item;\r\n                return (\r\n                <option value={value} key={`${value}-opt-key`}>{label}</option>\r\n                )\r\n            }\r\n            )}\r\n        </select>\r\n        </label>\r\n        </React.Fragment>\r\n)};\r\n\r\nconst formValues = {\r\n    title: '',\r\n    description: '',\r\n    categories: '',\r\n    status: '',\r\n    taskgroup: ''\r\n};\r\n\r\nconst taskGroupList = [\r\n    {value: 'queue', label: 'QUEUE'},\r\n    {value: 'doing', label: 'DOING'},\r\n    {value: 'done', label: 'DONE'},\r\n];\r\n\r\nfunction TaskCreatorDialog(props) {\r\n    const {\r\n        type='Add', \r\n        isOpen = false, \r\n        handleClose=()=>{},\r\n        onSubmit=()=>{},\r\n        isLoading = false,\r\n        selected = {}\r\n      } = props;\r\n\r\n    const { register, handleSubmit, reset, formState: { errors } } = useForm({defaultValues: formValues});\r\n\r\n    const onSubmit_ = (data) => {\r\n        onSubmit(data, () => reset(formValues));\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        handleClose();\r\n        reset(formValues);\r\n    };\r\n\r\n    useEffect(()=> {\r\n        if (selected && selected.taskgroup) {\r\n            reset({...formValues, ...selected});\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [selected]);\r\n\r\n    return(\r\n        <Dialog\r\n            isOpen = {isOpen}\r\n            handleClose = {handleClose}\r\n            handleConfirm = {handleSubmit(onSubmit_)}\r\n            handleCancel = {handleCancel}\r\n            disabled={isLoading}\r\n            title = {`${type} Task`}\r\n            description = 'Fill-up required (*) fields.'\r\n        >\r\n            {/* form */}\r\n        <form className='flex flex-col gap-2 m-1' >\r\n            <TextInput name='title' label=\"Title\" register={register} validation={{minLength: {value: 3,message: 'Title should be atleast 3 char long.'}}} required />\r\n            <TextArea name='description' label=\"Description\" register={register} />\r\n            <TextInput name='status' label=\"Status\" register={register} />\r\n            <TextInput name='categories' label=\"Categories (comma-separated)\" register={register} />\r\n            <Select name='taskgroup' label=\"Task Group\" optionsList={taskGroupList} register={register} required />\r\n            {/* Error messages */}\r\n            {errors && Object.entries(errors).map(([key,val]) => (\r\n                <p key={`${key}-errmsg`} className='font-light text-xs text-red-500 mt-2 capitalize'>{(val.message && val.message.length > 0) ? val.message: `${key} is required.`}</p>\r\n            ))}\r\n        </form>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default TaskCreatorDialog;","import React from 'react';\r\n\r\nimport Dialog from './Dialog';\r\n\r\nfunction TaskCreatorDialog(props) {\r\n    const {isOpen = false, taskTitle = '', handleConfirm=()=>{}, handleClose=()=>{}, isLoading=false} = props;\r\n    return(\r\n        <Dialog\r\n            isOpen = {isOpen}\r\n            handleClose = {handleClose}\r\n            handleConfirm = {handleConfirm}\r\n            handleCancel = {handleClose}\r\n            title = 'Delete Task'\r\n            description = {`Are you sure to delete \"${taskTitle}\"? This can't be undone.`}\r\n            disabled={isLoading}\r\n            />\r\n    );\r\n}\r\n\r\nexport default TaskCreatorDialog;","import React, {useEffect} from 'react';\r\nimport {useForm} from 'react-hook-form';\r\n\r\nimport Dialog from './Dialog';\r\n\r\nconst Select = (props) => {\r\n    const { name, optionsList = [], register, required } = props;\r\n    return(\r\n        <React.Fragment>\r\n        <select {...register(name, { required })} className='mt-1 block w-full rounded-md bg-gray-100 border-transparent focus:border-gray-500 focus:bg-white focus:ring-0' >\r\n            {optionsList.map(item => {\r\n                const {value, label} = item;\r\n                return (\r\n                <option value={value} key={`${value}-opt-key`}>{label}</option>\r\n                )\r\n            }\r\n            )}\r\n        </select>\r\n        </React.Fragment>\r\n)};\r\n\r\nconst formValues = {\r\n    title: '',\r\n    description: '',\r\n    categories: '',\r\n    status: '',\r\n    taskgroup: ''\r\n};\r\n\r\nconst taskGroupList = [\r\n    {value: 'queue', label: 'QUEUE'},\r\n    {value: 'doing', label: 'DOING'},\r\n    {value: 'done', label: 'DONE'},\r\n];\r\n\r\nfunction TaskChangeGroupDialog(props) {\r\n    const {\r\n        isOpen = false, \r\n        handleClose=()=>{},\r\n        onSubmit=()=>{},\r\n        isLoading = false,\r\n        selected = {}\r\n      } = props;\r\n\r\n    const { register, handleSubmit, reset, formState: { errors } } = useForm({defaultValues: formValues});\r\n\r\n    const onSubmit_ = (data) => {\r\n        onSubmit(data, () => reset(formValues));\r\n    };\r\n\r\n    const handleCancel = () => {\r\n        handleClose();\r\n        reset(formValues);\r\n    };\r\n\r\n    useEffect(()=> {\r\n        if (selected && selected.taskgroup) {\r\n            reset({...formValues, ...selected});\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [selected]);\r\n\r\n    return(\r\n        <Dialog\r\n            isOpen = {isOpen}\r\n            handleClose = {handleClose}\r\n            handleConfirm = {handleSubmit(onSubmit_)}\r\n            handleCancel = {handleCancel}\r\n            disabled={isLoading}\r\n            title = 'Change Group'\r\n            description = {`Select which group to transfer task \"${selected && selected.title}.\"`}\r\n        >\r\n            {/* form */}\r\n        <form className='flex flex-col gap-2 m-1' >\r\n            <Select name='taskgroup' label=\"Task Group\" optionsList={taskGroupList} register={register} required />\r\n            {/* Error messages */}\r\n            {errors && Object.entries(errors).map(([key,val]) => (\r\n                <p key={`${key}-errmsg`} className='font-light text-xs text-red-500 mt-2 capitalize'>{(val.message && val.message.length > 0) ? val.message: `${key} is required.`}</p>\r\n            ))}\r\n        </form>\r\n        </Dialog>\r\n    );\r\n}\r\n\r\nexport default TaskChangeGroupDialog;","import axios from \"axios\";\r\n\r\n//API URL\r\nlet WEB_SERVER_URL;\r\nif (\r\n  window.location.protocol === \"https:\" ||\r\n  window.location.hostname === \"todo.gabrielslach.me\"\r\n) {\r\n    WEB_SERVER_URL = window.location.origin;\r\n  }\r\nelse {\r\n  WEB_SERVER_URL = \"http://localhost:5000\"\r\n  };\r\n\r\nconst WEB_SERVER_API_URL = WEB_SERVER_URL + \"/api/\";\r\n\r\nexport const postRequest = (action, dataParameters, loginToken) => {\r\n  return axios({\r\n    method: \"post\",\r\n    url: WEB_SERVER_API_URL + action,\r\n    data: dataParameters,\r\n    timeout: 30000,\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: \"Bearer \" + loginToken,\r\n    },\r\n  });\r\n};\r\n","import { useState, useRef, useMemo } from \"react\";\r\n\r\nimport { postRequest } from \"./utilityFunctions\";\r\n\r\nfunction createColors () {\r\n  const colors = ['green', 'blue', 'red', 'yellow', 'indigo', 'purple', 'pink'];\r\n  const levels = ['50', '200', '400', '600', '800'];\r\n  const colorVariants = [];\r\n\r\n  \r\n  for (const level of levels) {\r\n    for (const color of colors) {\r\n      colorVariants.push({color, level})\r\n    };\r\n  };\r\n\r\n  return colorVariants;\r\n};\r\n\r\nconst mapData = (colorVariants, setQueueTasks, setDoingTasks, setDoneTasks, setTasks = () => {}) => (data) => {\r\n  if (!data || !data.tasks || !data.tasks.list) return;\r\n\r\n  const queueTasks_ = [];\r\n  const doingTasks_ = [];\r\n  const doneTasks_ = [];\r\n\r\n  const categoriesList = [];\r\n\r\n  //Listing Categories\r\n  for (const task of data.tasks.list) {\r\n    task.categories.forEach(item=>{\r\n      const catId = categoriesList.indexOf(item);\r\n      if (catId < 0 && colorVariants.length > categoriesList.length) {\r\n        categoriesList.push(item);\r\n      }\r\n    });\r\n  };\r\n  \r\n  // Segregating tasks\r\n  for (const task of data.tasks.list) {\r\n    const taskCategories = task.categories;\r\n    const task_ = {...task};\r\n    task_.categories = taskCategories.map(item => {\r\n        let catListId = categoriesList.indexOf(item);\r\n        if (catListId < 0) {\r\n          catListId = categoriesList.length - 1;\r\n        }\r\n        return({colorVariant: colorVariants[catListId], label:item})\r\n      });\r\n      \r\n    switch (task.taskgroup) {\r\n      case \"queue\":\r\n        queueTasks_.push(task_);\r\n        break;\r\n      case \"doing\":\r\n        doingTasks_.push(task_);\r\n        break;\r\n      case \"done\":\r\n        doneTasks_.push(task_);\r\n        break;\r\n      default:\r\n        break;\r\n    };\r\n  };\r\n\r\n  setTasks(data);\r\n  setQueueTasks(queueTasks_);\r\n  setDoingTasks(doingTasks_);\r\n  setDoneTasks(doneTasks_);\r\n};\r\n\r\nconst filterFx = (field, filterTxt) => arr => {\r\n  return arr.filter(item => ( JSON.stringify(item[field]).toLowerCase().indexOf(filterTxt.toLowerCase()) >= 0 ));\r\n};\r\n\r\nexport default function useTasks(vars) { // You could use this var to set something on the local state.\r\n\r\n  const timeOutVar = useRef(null);\r\n  const colorVariants = useMemo(createColors, []);\r\n\r\n  //states\r\n  const [tasks, setTasks] = useState([]);\r\n  const [queueTasks, setQueueTasks] = useState([]);\r\n  const [doingTasks, setDoingTasks] = useState([]);\r\n  const [doneTasks, setDoneTasks] = useState([]);\r\n\r\n  /*************** Dont edit below this line ***************/\r\n  \r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  function startTimeout() {\r\n    timeOutVar.current = setTimeout(function () {\r\n    alert(\"Server Timeout\");\r\n    setIsLoading(false);\r\n    }, 30000);\r\n  }\r\n\r\n  function stopTimeout() {\r\n    clearTimeout(timeOutVar.current);\r\n  }\r\n\r\n  const onRequestSuccess = (req, resData, onSuccess) => {\r\n    const { data, oFlag, oMessage } = resData;\r\n    if (oFlag) {\r\n        onSuccess(data);\r\n    } else {\r\n        console.log(req, ': ', oMessage);\r\n    };\r\n  };\r\n\r\n  const onRequestFail = (req, status) => {\r\n    if (status === 401 || status === 403) {\r\n      alert('Unauthorized.')\r\n    }\r\n\r\n    console.log(\r\n      \"Server Error: Please contact your server administrator.\",\r\n    );\r\n\r\n    alert(status || 'Server Error. Please reload the page.');\r\n  \r\n  };\r\n\r\n  const makePostRequest = (req, api, dataparam, loginToken, onSuccess) => {\r\n    postRequest(api, dataparam, loginToken)\r\n      .then((res) => {\r\n        stopTimeout();\r\n        setIsLoading(false);\r\n        if (res.status !== 200 && res.status !== 201) {\r\n          onRequestFail(req, res.status);\r\n        } else {\r\n          onRequestSuccess(req, res.data, onSuccess);  \r\n        }\r\n      })\r\n      .catch((err) => {\r\n        stopTimeout();\r\n        setIsLoading(false);\r\n        onRequestFail(req, (err && err.response) ? err.response.status: '');\r\n        console.log(\"makePostRequest_err: \", err);\r\n      });\r\n  };\r\n\r\n  /*************** Dont edit above this line ***************/\r\n\r\n  const makeRequest = (req, vars = {}, callback) => {\r\n    var api = \"\";\r\n    var dataparam = {};\r\n    let onSuccess = () => {};\r\n    setIsLoading(true);\r\n    switch (req) {\r\n      case \"get\":\r\n        api += \"get-tasks\";\r\n        dataparam = {};\r\n        onSuccess = mapData(colorVariants, setQueueTasks, setDoingTasks, setDoneTasks, setTasks);\r\n        break;\r\n      case \"add\":\r\n        api += \"append-task\";\r\n        dataparam = {id: null, ...vars};\r\n        onSuccess = data => {\r\n          mapData(colorVariants, setQueueTasks, setDoingTasks, setDoneTasks, setTasks)(data);\r\n          callback();\r\n        }\r\n        break;\r\n        case \"edit\":\r\n          api += \"append-task\";\r\n          dataparam = vars;\r\n          onSuccess = data => {\r\n            mapData(colorVariants, setQueueTasks, setDoingTasks, setDoneTasks, setTasks)(data);\r\n            callback();\r\n          }\r\n          break;\r\n          case \"delete\":\r\n            api += \"delete-task\";\r\n            dataparam = vars;\r\n            onSuccess = data => {\r\n              mapData(colorVariants, setQueueTasks, setDoingTasks, setDoneTasks, setTasks)(data);\r\n              callback();\r\n            }\r\n            break;\r\n          case \"filter\":\r\n            const filterField= vars.field;\r\n            const filterTxt = vars.filterTxt;\r\n            \r\n            if (filterTxt === '') {\r\n              mapData(colorVariants, setQueueTasks, setDoingTasks, setDoneTasks)(tasks);\r\n            } else {\r\n              setQueueTasks(filterFx(filterField, filterTxt));\r\n              setDoingTasks(filterFx(filterField, filterTxt));\r\n              setDoneTasks(filterFx(filterField, filterTxt));\r\n            }\r\n            setIsLoading(false);\r\n            return;\r\n      default:\r\n    }\r\n    startTimeout();\r\n    if (req !== \"\" || typeof req !== \"undefined\") makePostRequest(req, api, dataparam, null, onSuccess);\r\n  };\r\n\r\n  return {\r\n    queueTasks,\r\n    doingTasks,\r\n    doneTasks,\r\n    isLoading,\r\n    setTasks: makeRequest,\r\n  };\r\n}\r\n","import React, {useState, useEffect} from 'react';\n\nimport GroupPaper from './components/GroupPaper';\nimport TaskCreatorDialog from './components/TaskCreatorDialog';\nimport TaskDeleteDialog from './components/TaskDeleteDialog';\nimport TaskChangeGroupDialog from './components/TaskChangeGroupDialog';\n\nimport useTasks from './util/useTasks';\n\nconst dialogState = {\n  taskCreator: false,\n  taskEditor: false,\n  taskDelete: false\n};\n\nconst dialogType = {\n  taskCreator: 'taskCreator',\n  taskEditor: 'taskEditor',\n  taskDelete: 'taskDelete',\n  taskChangeGroup: 'taskChangeGroup'\n};\n\nconst formFields = [\n  'title',\n  'description',\n  'categories',\n  'status',\n  'taskgroup'\n];\n\nfunction App() {\n  const [isOpen, setIsOpen] = useState(dialogState);\n  const [selected, setSelected] = useState(null);\n\n  const {queueTasks, doingTasks, doneTasks, isLoading, setTasks} = useTasks();\n\n  const handleToggleIsOpen = (type, isOpen_) => () => {    \n    setIsOpen(isOpen=> ({...isOpen, [type]: isOpen_}));\n  };\n\n  const onAddTask = (fields) => {\n    if (fields && fields.groupName) {\n      setSelected({taskgroup: fields.groupName});\n    } else {\n      setSelected(null);\n    };\n\n    handleToggleIsOpen(dialogType.taskCreator, true)();\n  };\n\n  const onEditTask = (fields) => {\n    if (fields && !isNaN(fields.id)) {\n      setSelected(fields);\n    } else {\n      setSelected(null);\n    };\n\n    handleToggleIsOpen(dialogType.taskEditor, true)();\n  };\n\n  const onDeleteTask = (fields) => {\n    if (fields && !isNaN(fields.id)) {\n      setSelected(fields);\n    } else {\n      setSelected(null);\n    };\n\n    handleToggleIsOpen(dialogType.taskDelete, true)();\n  };\n  \n  const onTaskChangeGroup = (fields) => {\n    if (fields && !isNaN(fields.id)) {\n      setSelected(fields);\n    } else {\n      setSelected(null);\n    };\n\n    handleToggleIsOpen(dialogType.taskChangeGroup, true)();\n  };\n\n  const handleCreateTask = (formData, resetFormCallback) => {\n    const callback = () => {\n      handleToggleIsOpen(dialogType.taskCreator, false)();\n      handleToggleIsOpen(dialogType.taskEditor, false)();\n      handleToggleIsOpen(dialogType.taskChangeGroup, false)();\n      resetFormCallback();\n    };\n    setTasks('add', formData, callback);\n  };\n\n  const handleDeleteTask = (id) => {\n    const callback = () => {\n      handleToggleIsOpen(dialogType.taskDelete, false)();\n    }\n    setTasks('delete', {id}, callback);\n  };\n\n  const handleSearch = (e) => {\n    e.preventDefault();\n    const filterTxt = e.target.filterTxt.value;\n    const field = e.target.field.value;\n    setTasks('filter', {field, filterTxt});\n  };\n\n  const handleSearchChange = (e) => {\n    const filterTxt = e.target.value;\n    if (filterTxt === ''){\n    setTasks('filter', {filterTxt});\n  };\n  };\n\n  useEffect(()=> {\n    setTasks('get');\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  return (\n    <div className='root'>\n      {/* App Bar */}\n      <div className='flex flex-row flex-auto items-center py-4 px-7 bg-appBarBlue'>\n        <p className='flex-grow self-auto font-bold font-roboto text-white text-xl'>HOT LIST</p>\n        <button \n          className='py-2 px-3 rounded bg-btnBlue hover:bg-btnHovBlue text-white font-medium text-sm'\n          onClick={handleToggleIsOpen(dialogType.taskCreator, true)}\n          >\n            Add Task\n          </button>\n      </div>\n      {/* Filter Field */}\n      <form onSubmit={handleSearch} onChange={handleSearchChange}>\n      <div className='m-2 mt-4 sm:mt-7 sm:ml-7 flex flex-col sm:flex-row gap-3 md:max-w-lg'>\n      <div className='max-w flex flex-row flex-grow gap-0 rounded-md border-2 border-gray-400 focus-within:border-blue-500 focus-within:ring focus-within:ring-blue-200 focus-within:ring-opacity-50  overflow-hidden'>\n        <input name='filterTxt' type='text' placeholder='Search' className='flex-grow rounded-md rounded-r-none border-0 focus:ring-0' />\n        <select name='field' className='rounded-md rounded-l-none border-0 focus:ring-0' style={{textAlignLast: 'right'}} >\n          {formFields.map(item => (\n            <option key={`${item}-fieldOpt`} value={item}>{item.toUpperCase()}</option>\n          ))}\n        </select>\n      </div>\n      <button type='submit' className='px-4 rounded-md bg-btnBlue p-2 text-white' >Search</button>\n      </div>\n      </form>\n      {/* App Body */}\n      <div className='mx-3 my-4 sm:m-7 flex flex-col md:flex-row gap-10'>\n        <GroupPaper\n          groupName='queue'\n          taskList={queueTasks}\n          onAddTask={onAddTask}\n          onEditTask={onEditTask}\n          onDeleteTask={onDeleteTask}\n          onTaskChangeGroup={onTaskChangeGroup}\n          />\n        <GroupPaper\n          groupName='doing'\n          taskList={doingTasks}\n          onAddTask={onAddTask}\n          onEditTask={onEditTask}\n          onDeleteTask={onDeleteTask}\n          onTaskChangeGroup={onTaskChangeGroup}\n          />\n        <GroupPaper\n          groupName='done'\n          taskList={doneTasks}\n          onAddTask={onAddTask}\n          onEditTask={onEditTask}\n          onDeleteTask={onDeleteTask}\n          onTaskChangeGroup={onTaskChangeGroup}\n          />\n      </div>\n      {/* Dialog */}\n      <TaskCreatorDialog\n        type='Add'\n        isOpen={isOpen.taskCreator}\n        isLoading={isLoading}\n        onSubmit={handleCreateTask}\n        handleClose={handleToggleIsOpen(dialogType.taskCreator, false)}\n        selected={selected}\n        />\n      <TaskCreatorDialog\n        type='Edit'\n        isOpen={isOpen.taskEditor}\n        isLoading={isLoading}\n        onSubmit={handleCreateTask}\n        handleClose={handleToggleIsOpen(dialogType.taskEditor, false)}\n        selected={selected}\n        />\n        <TaskChangeGroupDialog\n          isOpen={isOpen.taskChangeGroup}\n          isLoading={isLoading}\n          onSubmit={handleCreateTask}\n          handleClose={handleToggleIsOpen(dialogType.taskChangeGroup, false)}\n          selected={selected}\n          />\n      <TaskDeleteDialog \n        isOpen={isOpen.taskDelete}\n        isLoading={isLoading}\n        taskTitle={selected && selected.title}\n        handleClose={handleToggleIsOpen(dialogType.taskDelete, false)}\n        handleConfirm={() => handleDeleteTask(selected.id)}\n        />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}